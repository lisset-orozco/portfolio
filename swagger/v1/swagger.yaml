---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/v1/portfolios/{id}/profit?start_date={start_date}&end_date={end_date}":
    parameters:
    - name: id
      in: path
      description: portfolio_id
      example: 1
      required: true
      schema:
        type: string
    - name: start_date
      in: path
      description: start_date
      example: '2022-04-03'
      required: true
      schema:
        type: string
    - name: end_date
      in: path
      description: end_date
      example: '2022-05-10'
      required: true
      schema:
        type: string
    get:
      summary: profit portfolio
      tags:
      - Portfolios
      description: Returns the profit of the Portfolio between two dates
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  profit_by_stock:
                    type: object
                    example:
                      AXSUSDT: '91.5'
                  annualized_profit:
                    type: string
                    example: '1098'
  "/v1/portfolios":
    post:
      summary: create portfolio
      tags:
      - Portfolios
      description: Request the creation of a portfolio with stocks
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 3
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/portfolio"
  "/v1/portfolios/{portfolio_id}/stocks":
    parameters:
    - name: portfolio_id
      in: path
      description: portfolio_id
      example: 1
      required: true
      schema:
        type: string
    post:
      summary: create stock
      tags:
      - Stocks
      description: Add more stocks to an existing portfolio
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                stocks:
                  "$ref": "#/components/schemas/portfolio/properties/stocks"
  "/v1/portfolios/{portfolio_id}/stocks/{symbol}/price?date={date}":
    parameters:
    - name: portfolio_id
      in: path
      description: portfolio_id
      example: 1
      required: true
      schema:
        type: string
    - name: symbol
      in: path
      description: stock symbol
      example: BTCUSDT
      required: true
      schema:
        type: string
    - name: date
      in: path
      description: date
      example: '2022-04-30'
      required: true
      schema:
        type: string
    get:
      summary: price stock
      tags:
      - Stocks
      description: Show the record of a stock purchased on a given date
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: 3
                        type:
                          type: string
                          example: stock_history
                        attributes:
                          type: object
                          properties:
                            amount:
                              type: number
                              example: 1.5
                            price:
                              type: number
                              example: 1.5
                            purchase_date:
                              type: string
                              example: '2022-04-30'
  "/v1/stocks/{symbol}/price?date={date}":
    parameters:
    - name: symbol
      in: path
      description: stock symbol
      example: BTCUSDT
      required: true
      schema:
        type: string
    - name: date
      in: path
      description: date
      example: '2022-04-30'
      required: true
      schema:
        type: string
    get:
      summary: market_price stock
      tags:
      - Stocks
      description: Show the market price of a stock on a given date
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  market_price:
                    type: string
                    example: '32576.45'
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: portfolio-fintual.herokuapp.com
components:
  schemas:
    portfolio:
      type: object
      properties:
        name:
          type: string
          example: personal
        description:
          type: string
          example: personal investments
        stocks:
          type: object
          properties:
            ROSEUSDT:
              type: array
              items:
                type: object
                properties:
                  amount:
                    type: number
                    example: 1.5
                  purchase_date:
                    type: string
                    example: '2022-04-29'
                  price:
                    type: number
                    example: 36.5
            BTCUSDT:
              type: array
              items:
                type: object
                properties:
                  amount:
                    type: number
                    example: 0.5
                  purchase_date:
                    type: string
                    example: '2022-04-29'
                  price:
                    type: number
                    example: 36550
            ETHUSDT:
              type: array
              items:
                type: object
                properties:
                  amount:
                    type: number
                    example: 3.5
                  purchase_date:
                    type: string
                    example: '2022-04-29'
                  price:
                    type: number
                    example: 2450
